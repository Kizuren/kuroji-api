model UpdateQueue {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id        String   @id @default(uuid())
  animeId   Int      @unique // Ensures no duplicate anime in queue
  malId     Int?
  priority  String // 'high', 'medium', 'low'
  reason    String // 'today', 'week_ago', 'missed'
  addedAt   DateTime @default(now())
  retries   Int      @default(0)
  lastError String? // Store last error message for debugging
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([priority, addedAt]) // For efficient queue processing
  @@index([animeId]) // For quick lookups
}

/// @DtoReadOnly
/// @DtoCreateOptional
/// @DtoUpdateOptional
model UpdateHistory {
  id          String   @id @default(uuid())
  animeId     Int
  malId       Int?
  providers   String[] // Which providers were updated
  success     Boolean
  duration    Int? // How long it took in seconds
  errorCount  Int      @default(0)
  errors      String[] // Any errors that occurred
  triggeredBy String // 'today', 'week_ago', 'manual', etc.
  createdAt   DateTime @default(now())

  @@index([animeId, createdAt])
  @@index([success, createdAt])
}
