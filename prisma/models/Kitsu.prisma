model Kitsu {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id                  String      @id
  anilistId           Int?        @unique
  type                String?
  selfLink            String?     @map("self_link")

  // Attributes
  createdAt           DateTime?   @map("created_at")
  updatedAt           DateTime?   @map("updated_at")
  slug                String?     @map("slug")
  synopsis            String?     @map("synopsis")
  coverImageTopOffset Int?        @map("cover_image_top_offset")
  canonicalTitle      String?     @map("canonical_title")
  abbreviatedTitles   String[]    @map("abbreviated_titles")
  averageRating       String?     @map("average_rating")
  ratingFrequencies   Json?       @map("rating_frequencies")
  userCount           Int?        @map("user_count")
  favoritesCount      Int?        @map("favorites_count")
  startDate           DateTime?   @map("start_date")
  endDate             DateTime?   @map("end_date")
  popularityRank      Int?        @map("popularity_rank")
  ratingRank          Int?        @map("rating_rank")
  ageRating           String?     @map("age_rating")
  ageRatingGuide      String?     @map("age_rating_guide")
  subtype             String?
  status              String?
  tba                 String?
  episodeCount        Int?        @map("episode_count")
  episodeLength       Int?        @map("episode_length")
  youtubeVideoId      String?     @map("youtube_video_id")
  showType            String?     @map("show_type")
  nsfw                Boolean     @default(false)

  // One-to-One Relations
  /// @DtoRelationCanConnectOnCreate
  titles              KitsuTitle?
  /// @DtoRelationCanConnectOnCreate
  posterImage         KitsuPosterImage?  @relation("PosterImage")
  /// @DtoRelationCanConnectOnCreate
  coverImage          KitsuCoverImage?   @relation("CoverImage")
  /// @DtoRelationCanConnectOnCreate
  genres              KitsuGenres?
  /// @DtoRelationCanConnectOnCreate
  categories          KitsuCategories?
  /// @DtoRelationCanConnectOnCreate
  castings            KitsuCastings?
  /// @DtoRelationCanConnectOnCreate
  installments        KitsuInstallments?
  /// @DtoRelationCanConnectOnCreate
  mappings            KitsuMappings?
  /// @DtoRelationCanConnectOnCreate
  reviews             KitsuReviews?
  /// @DtoRelationCanConnectOnCreate
  mediaRelationships  KitsuMediaRelationships?
  /// @DtoRelationCanConnectOnCreate
  episodes            KitsuEpisodes?
  /// @DtoRelationCanConnectOnCreate
  streamingLinks      KitsuStreamingLinks?
  /// @DtoRelationCanConnectOnCreate
  animeProductions    KitsuAnimeProductions?
  /// @DtoRelationCanConnectOnCreate
  animeCharacters     KitsuAnimeCharacters?
  /// @DtoRelationCanConnectOnCreate
  animeStaff          KitsuAnimeStaff?

  /// @DtoRelationCanConnectOnCreate
  anilist             Anilist?    @relation(fields: [anilistId], references: [id])
}

model KitsuTitle {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id                  String    @id @default(cuid())
  en                  String?
  en_jp               String?
  ja_jp               String?

  kitsuId             String    @unique
  /// @DtoRelationCanConnectOnCreate
  kitsu               Kitsu     @relation(fields: [kitsuId], references: [id])
}

model KitsuPosterImage {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id                  String    @id @default(cuid())
  tiny                String?
  small               String?
  medium              String?
  large               String?
  original            String?
  dimensions          KitsuImageDimensions?

  kitsuId             String    @unique
  /// @DtoRelationCanConnectOnCreate
  kitsu               Kitsu     @relation("PosterImage", fields: [kitsuId], references: [id])
}

model KitsuCoverImage {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id                  String    @id @default(cuid())
  tiny                String?
  small               String?
  large               String?
  original            String?
  dimensions          KitsuImageDimensions?

  kitsuId             String    @unique
  /// @DtoRelationCanConnectOnCreate
  kitsu               Kitsu     @relation("CoverImage", fields: [kitsuId], references: [id])
}

model KitsuImageDimensions {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id                  String    @id @default(cuid())
  /// @DtoRelationCanConnectOnCreate
  tiny                KitsuDimension? @relation("TinyDimension")
  /// @DtoRelationCanConnectOnCreate
  small               KitsuDimension? @relation("SmallDimension")
  /// @DtoRelationCanConnectOnCreate
  medium              KitsuDimension? @relation("MediumDimension")
  /// @DtoRelationCanConnectOnCreate
  large               KitsuDimension? @relation("LargeDimension")

  posterImageId       String?   @unique
  coverImageId        String?   @unique
  /// @DtoRelationCanConnectOnCreate
  posterImage         KitsuPosterImage? @relation(fields: [posterImageId], references: [id])
  /// @DtoRelationCanConnectOnCreate
  coverImage          KitsuCoverImage?  @relation(fields: [coverImageId], references: [id])
}

model KitsuDimension {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id                  String    @id @default(cuid())
  width               Int?
  height              Int?

  tinyDimensionId     String?   @unique
  smallDimensionId    String?   @unique
  mediumDimensionId   String?   @unique
  largeDimensionId    String?   @unique
  /// @DtoRelationCanConnectOnCreate
  tinyDimension       KitsuImageDimensions?  @relation("TinyDimension", fields: [tinyDimensionId], references: [id])
  /// @DtoRelationCanConnectOnCreate
  smallDimension      KitsuImageDimensions?  @relation("SmallDimension", fields: [smallDimensionId], references: [id])
  /// @DtoRelationCanConnectOnCreate
  mediumDimension     KitsuImageDimensions?  @relation("MediumDimension", fields: [mediumDimensionId], references: [id])
  /// @DtoRelationCanConnectOnCreate
  largeDimension      KitsuImageDimensions?  @relation("LargeDimension", fields: [largeDimensionId], references: [id])
}

model KitsuGenres {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id        String  @id @default(cuid())
  selfLink  String
  related   String
  
  kitsuId   String  @unique
  /// @DtoRelationCanConnectOnCreate
  kitsu     Kitsu   @relation(fields: [kitsuId], references: [id])
}

model KitsuCategories {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id        String  @id @default(cuid())
  selfLink  String
  related   String
  
  kitsuId   String  @unique
  /// @DtoRelationCanConnectOnCreate
  kitsu     Kitsu   @relation(fields: [kitsuId], references: [id])
}

model KitsuCastings {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id        String  @id @default(cuid())
  selfLink  String
  related   String
  
  kitsuId   String  @unique
  /// @DtoRelationCanConnectOnCreate
  kitsu     Kitsu   @relation(fields: [kitsuId], references: [id])
}

model KitsuInstallments {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id        String  @id @default(cuid())
  selfLink  String
  related   String
  
  kitsuId   String  @unique
  /// @DtoRelationCanConnectOnCreate
  kitsu     Kitsu   @relation(fields: [kitsuId], references: [id])
}

model KitsuMappings {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id        String  @id @default(cuid())
  selfLink  String
  related   String
  
  kitsuId   String  @unique
  /// @DtoRelationCanConnectOnCreate
  kitsu     Kitsu   @relation(fields: [kitsuId], references: [id])
}

model KitsuReviews {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id        String  @id @default(cuid())
  selfLink  String
  related   String
  
  kitsuId   String  @unique
  /// @DtoRelationCanConnectOnCreate
  kitsu     Kitsu   @relation(fields: [kitsuId], references: [id])
}

model KitsuMediaRelationships {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id        String  @id @default(cuid())
  selfLink  String
  related   String
  
  kitsuId   String  @unique
  /// @DtoRelationCanConnectOnCreate
  kitsu     Kitsu   @relation(fields: [kitsuId], references: [id])
}

model KitsuEpisodes {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id        String  @id @default(cuid())
  selfLink  String
  related   String
  
  kitsuId   String  @unique
  /// @DtoRelationCanConnectOnCreate
  kitsu     Kitsu   @relation(fields: [kitsuId], references: [id])
}

model KitsuStreamingLinks {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id        String  @id @default(cuid())
  selfLink  String
  related   String
  
  kitsuId   String  @unique
  /// @DtoRelationCanConnectOnCreate
  kitsu     Kitsu   @relation(fields: [kitsuId], references: [id])
}

model KitsuAnimeProductions {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id        String  @id @default(cuid())
  selfLink  String
  related   String
  
  kitsuId   String  @unique
  /// @DtoRelationCanConnectOnCreate
  kitsu     Kitsu   @relation(fields: [kitsuId], references: [id])
}

model KitsuAnimeCharacters {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id        String  @id @default(cuid())
  selfLink  String
  related   String
  
  kitsuId   String  @unique
  /// @DtoRelationCanConnectOnCreate
  kitsu     Kitsu   @relation(fields: [kitsuId], references: [id])
}

model KitsuAnimeStaff {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id        String  @id @default(cuid())
  selfLink  String
  related   String
  
  kitsuId   String  @unique
  /// @DtoRelationCanConnectOnCreate
  kitsu     Kitsu   @relation(fields: [kitsuId], references: [id])
}