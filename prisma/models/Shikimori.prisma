model Shikimori {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id                String                @id
  malId             Int?                  @unique
  name              String?
  russian           String?
  licenseNameRu     String?
  english           String?
  japanese          String?
  /// @DtoRelationCanConnectOnCreate
  poster            ShikimoriPoster?      @relation("ShikimoriPoster")
  synonyms          String[]
  kind              String?
  rating            String?
  score             Float?
  status            String?
  episodes          Int?
  episodesAired     Int?
  duration          Int?
  /// @DtoRelationCanConnectOnCreate
  airedOn           AiredOn?              @relation("ShikimoriAiredOn")
  /// @DtoRelationCanConnectOnCreate
  releasedOn        ReleasedOn?           @relation("ShikimoriReleasedOn")
  franchise         String?
  url               String?
  season            String?
  createdAt         DateTime?
  updatedAt         DateTime?
  nextEpisodeAt     DateTime?
  description       String?
  descriptionHtml   String?
  descriptionSource String?
  /// @DtoRelationCanCreateOnCreate
  /// @DtoRelationCanConnectOnCreate
  chronology        BasicIdShik[]         @relation("ShikimoriChronology")
  /// @DtoRelationCanCreateOnCreate
  /// @DtoRelationCanConnectOnCreate
  videos            ShikimoriVideo[]      @relation("ShikimoriVideo")
  /// @DtoRelationCanCreateOnCreate
  /// @DtoRelationCanConnectOnCreate
  screenshots       ShikimoriScreenshot[] @relation("ShikimoriScreenshot")
  /// @DtoRelationCanConnectOnCreate
  anilist           Anilist?              @relation(fields: [malId], references: [idMal])
}

model AiredOn {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id          Int    @id @default(autoincrement())
  shikimoriId String @unique

  year  Int?
  month Int?
  day   Int?
  date  String?

  /// @DtoRelationCanConnectOnCreate
  shikimori Shikimori @relation("ShikimoriAiredOn", fields: [shikimoriId], references: [id])
}

model ReleasedOn {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id          Int    @id @default(autoincrement())
  shikimoriId String @unique

  year  Int?
  month Int?
  day   Int?
  date  String?

  /// @DtoRelationCanConnectOnCreate
  shikimori Shikimori @relation("ShikimoriReleasedOn", fields: [shikimoriId], references: [id])
}

model BasicIdShik {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id    String  @id
  malId String?

  /// @DtoRelationCanCreateOnCreate
  /// @DtoRelationCanConnectOnCreate
  shikimori Shikimori[] @relation("ShikimoriChronology")
}

model ShikimoriVideo {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id        String  @id
  url       String?
  name      String?
  kind      String?
  playerUrl String?
  imageUrl  String?

  /// @DtoRelationCanCreateOnCreate
  /// @DtoRelationCanConnectOnCreate
  shikimori Shikimori[] @relation("ShikimoriVideo")
}

model ShikimoriScreenshot {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id          String  @id
  originalUrl String?
  x166Url     String?
  x332Url     String?

  /// @DtoRelationCanCreateOnCreate
  /// @DtoRelationCanConnectOnCreate
  shikimori Shikimori[] @relation("ShikimoriScreenshot")
}

model Title {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id      Int     @id @default(autoincrement())
  romaji  String?
  english String?
  native  String?
}

model DateDetails {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id    Int  @id @default(autoincrement())
  year  Int?
  month Int?
  day   Int?
}

model ShikimoriPoster {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id          String @id
  shikimoriId String @unique

  originalUrl String?
  mainUrl     String?

  /// @DtoRelationCanConnectOnCreate
  shikimori Shikimori @relation("ShikimoriPoster", fields: [shikimoriId], references: [id])
}

model ReleaseIndex {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id        String   @id
  addedAt   DateTime @default(now())
  updatedAt DateTime @updatedAt
}
