model Tmdb {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id                 Int      @id
  adult              Boolean
  backdrop_path      String?
  episode_run_time   Int[]
  media_type         String?
  first_air_date     String?
  homepage           String?
  in_production      Boolean?
  last_air_date      String?
  name               String?
  number_of_episodes Int?
  number_of_seasons  Int?
  original_language  String?
  original_name      String?
  origin_country     String[]
  overview           String?
  popularity         Float?
  poster_path        String?
  tagline            String?
  status             String?
  type               String?
  vote_average       Float?
  vote_count         Int?

  /// @DtoRelationCanConnectOnCreate
  next_episode_to_air TmdbNextEpisodeToAir? @relation("NextEpisode")
  /// @DtoRelationCanConnectOnCreate
  last_episode_to_air TmdbLastEpisodeToAir? @relation("LastEpisode")
  /// @DtoRelationCanCreateOnCreate
  /// @DtoRelationCanConnectOnCreate
  seasons             TmdbReleaseSeason[]   @relation("TmdbReleaseSeason")
  /// @DtoRelationCanCreateOnCreate
  /// @DtoRelationCanConnectOnCreate
  episodeSeasons      TmdbSeason[]
  /// @DtoRelationCanCreateOnCreate
  /// @DtoRelationCanConnectOnCreate
  episodes            TmdbSeasonEpisode[]
}

/// Add new model for episode info
model TmdbNextEpisodeToAir {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id              Int     @id
  name            String?
  overview        String?
  vote_average    Float?
  vote_count      Int?
  air_date        String?
  episode_number  Int?
  episode_type    String?
  production_code String?
  runtime         Int?
  season_number   Int?
  show_id         Int     @unique
  still_path      String?

  /// @DtoRelationCanConnectOnCreate
  tmdb_next Tmdb? @relation("NextEpisode", fields: [show_id], references: [id])
}

model TmdbLastEpisodeToAir {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id              Int     @id
  name            String?
  overview        String?
  vote_average    Float?
  vote_count      Int?
  air_date        String?
  episode_number  Int?
  episode_type    String?
  production_code String?
  runtime         Int?
  season_number   Int?
  show_id         Int     @unique
  still_path      String?

  /// @DtoRelationCanConnectOnCreate
  tmdb_last Tmdb? @relation("LastEpisode", fields: [show_id], references: [id])
}

model TmdbReleaseSeason {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id            Int     @id
  air_date      String?
  episode_count Int?
  name          String?
  overview      String? // @Lob
  poster_path   String? // handle URL concatenation in your app logic
  season_number Int
  vote_average  Float?

  /// @DtoRelationCanCreateOnCreate
  /// @DtoRelationCanConnectOnCreate
  tmdb Tmdb[] @relation("TmdbReleaseSeason")
}

model TmdbSeason {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id            Int     @id
  air_date      String?
  show_id       Int
  name          String?
  overview      String?
  poster_path   String?
  season_number Int
  vote_average  Float?

  /// @DtoRelationCanConnectOnCreate
  show     Tmdb                @relation(fields: [show_id], references: [id])
  /// @DtoRelationCanCreateOnCreate
  /// @DtoRelationCanConnectOnCreate
  episodes TmdbSeasonEpisode[] @relation("TmdbSeasonEpisode")
}

model TmdbSeasonEpisode {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id              Int     @id
  air_date        String?
  episode_number  Int
  episode_type    String?
  name            String?
  overview        String?
  production_code String?
  runtime         Int?
  season_number   Int
  show_id         Int
  season_id       Int?
  still_path      String?
  vote_average    Float?
  vote_count      Int?

  /// @DtoRelationCanConnectOnCreate
  show       Tmdb                     @relation(map: "TmdbSeasonEpisode_show_fkey", fields: [show_id], references: [id])
  /// @DtoRelationCanConnectOnCreate
  tmdbSeason TmdbSeason?              @relation("TmdbSeasonEpisode", fields: [season_id], references: [id])
  /// @DtoRelationCanConnectOnCreate
  images     TmdbSeasonEpisodeImages?
}

model TmdbSeasonEpisodeImages {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id        Int @id
  episodeId Int @unique
  /// @DtoRelationCanCreateOnCreate
  /// @DtoRelationCanConnectOnCreate
  stills  TmdbSeasonStillImage[] @relation("TmdbSeasonEpisodeStills")
  /// @DtoRelationCanConnectOnCreate
  episode TmdbSeasonEpisode      @relation(fields: [episodeId], references: [id])
}

model TmdbSeasonStillImage {
  /// @DtoReadOnly
  /// @DtoCreateOptional
  /// @DtoUpdateOptional
  id           Int     @id @default(autoincrement())
  aspect_ratio Float?
  height       Int?
  width        Int?
  iso_639_1    String?
  file_path    String?
  vote_average Float?
  vote_count   Int?

  /// @DtoRelationCanConnectOnCreate
  tmdbEpisodeImages TmdbSeasonEpisodeImages @relation("TmdbSeasonEpisodeStills", fields: [episodeImagesId], references: [id])
  episodeImagesId   Int
}
