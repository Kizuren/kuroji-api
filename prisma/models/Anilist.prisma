model Anilist {
  id                Int      @id
  idMal             Int?
  siteUrl           String?
  // Embedded objects stored as JSON
  title             AnilistTitle? @relation(fields: [titleId], references: [id]) // corresponds to Release.Title
  coverImage        AnilistCover? @relation(fields: [coverId], references: [id]) // corresponds to Release.CoverImage
  bannerImage       String?
  status            String?
  type              String?
  format            String?
  updatedAt         Int?
  description       String?
  startDate         StartDate? @relation(fields: [startDateId], references: [id]) // corresponds to Date (with start_year, start_month, start_day)
  endDate           EndDate? @relation(fields: [endDateId], references: [id]) // corresponds to Date (with end_year, end_month, end_day)
  season            String?
  seasonYear        Int?
  episodes          Int?
  duration          Int?
  countryOfOrigin   String?
  isLicensed        Boolean?
  source            String?
  hashtag           String?
  moreInfo          String?
  trailer           Json? // corresponds to Trailer
  isLocked          Boolean?
  isAdult           Boolean?
  averageScore      Int?
  meanScore         Int?
  score             Int?
  popularity        Int?
  trending          Int?
  favourites        Int?
  genres            String[] // Element collection of strings
  synonyms          String[]
  // Complex embedded collections stored as JSON:
  recommendations   Json? // RecommendationEdgeWrapper<BasicId>
  characters        AnilistCharacter[] @relation("AnilistCharacters")
  studios           AnilistStudio[] @relation("AnilistStudios")
  airingSchedule    AnilistAiringSchedule[] @relation("AnilistAiringSchedules")
  nextAiringEpisode AnilistNextAiringEpisode? @relation("AnilistNextAiringEpisode")
  stats             Json? // Stats (including scoreDistribution and statusDistribution)

  // Normalized collections (stored in separate tables)
  tags              AnilistTag[] @relation("AnilistTags")
  externalLinks     AnilistExternalLink[] @relation("AnilistExternalLinks")
  streamingEpisodes AnilistStreamingEpisode[] @relation("AnilistStreamingEpisodes")

  titleId           Int?
  coverId           Int?
  startDateId		Int?
  endDateId			Int?
}

model AnilistTitle {
  id               Int      @id @default(autoincrement())
  romaji    String?
  english   String?
  native    String?
  anilist   Anilist[]
}

model StartDate {
  id               Int      @id @default(autoincrement())
  day       Int?
  month     Int?
  year      Int?
  anilist	Anilist[]
}

model EndDate {
  id               Int      @id @default(autoincrement())
  day       Int?
  month     Int?
  year      Int?
  anilist	Anilist[]
}

model AnilistCover {
  id               Int      @id @default(autoincrement())
  color     String?
  large     String?
  medium    String?
  extraLarge String?
  anilist	Anilist[]
}

model AnilistIndex {
  id        String   @id
  updatedAt DateTime @default(now()) @updatedAt
  createdAt DateTime @default(now())
}

model AnilistCharacter {
  id          Int      @id @default(autoincrement())
  releaseId   Int
  characterId Int?
  name        String?
  image       String?  // Store the medium image URL

  anilist     Anilist  @relation("AnilistCharacters", fields: [releaseId], references: [id])
}

model AnilistTag {
  id               Int      @id @default(autoincrement())
  releaseId        Int
  tagId            Int?
  name             String?
  description      String?
  category         String?
  rank             Int?
  isGeneralSpoiler Boolean?
  isMediaSpoiler   Boolean?
  isAdult          Boolean?
  userId           Int?

  anilist          Anilist  @relation("AnilistTags", fields: [releaseId], references: [id])
}

model AnilistExternalLink {
  id         Int      @id @default(autoincrement())
  releaseId  Int
  exLinkId   Int?
  url        String?
  site       String?
  siteId     Int?
  type       String?
  language   String?
  color      String?
  icon       String?
  notes      String?
  isDisabled Boolean?

  anilist          Anilist  @relation("AnilistExternalLinks", fields: [releaseId], references: [id])
}

model AnilistStreamingEpisode {
  id        Int     @id @default(autoincrement())
  releaseId Int
  title     String?
  thumbnail String?
  url       String?
  site      String?

  anilist          Anilist  @relation("AnilistStreamingEpisodes", fields: [releaseId], references: [id])
}

model AnilistStudio {
  id         Int      @id @default(autoincrement())
  releaseId  Int
  studioId   Int?
  name       String?
  isMain     Boolean?

  anilist    Anilist  @relation("AnilistStudios", fields: [releaseId], references: [id])
}

model AnilistAiringSchedule {
  id              Int      @id @default(autoincrement())
  releaseId       Int
  scheduleId      Int?
  episode         Int?
  airingAt        Int?

  anilist         Anilist  @relation("AnilistAiringSchedules", fields: [releaseId], references: [id])
}

model AnilistNextAiringEpisode {
  id              Int      @id @default(autoincrement())
  releaseId       Int      @unique
  episode         Int?
  airingAt        Int?
  timeUntilAiring Int?

  anilist         Anilist  @relation("AnilistNextAiringEpisode", fields: [releaseId], references: [id])
}

model BasicIdAni {
  id        Int      @id @default(autoincrement())
  idMal     Int?
}